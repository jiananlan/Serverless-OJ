import{_ as N,e as y,f as $,E as w,c as k,a as n,w as r,j as P,r as l,o as L,b as m,t as b,i as T,d as O,u as j,l as D}from"./index-CMPZN-4C.js";import{m as H}from"./github-markdown-BOpQ1pHb.js";import{a as f}from"./axios-DXsv3KKR.js";const G={class:"submit"},Y={class:"header"},q={key:0,class:"problem-info"},z=["innerHTML"],S="https://api.github.com",R="xqy2006",U="Serverless-OJ",F={__name:"Submit",setup(J){const v=P(),x=j(),c=y(null),A=y(""),i=y({language:"cpp",code:""}),E=y(!1);$(async()=>{try{const t=await f.get(`/problems/${v.params.id}/problem.json`);c.value=t.data;const e=await f.get(`/problems/${v.params.id}/README.md`);A.value=H(e.data)}catch(t){console.error("Failed to load problem:",t),w.error("加载题目失败")}});async function B(t){const s=await(await fetch("/public_key.pem")).text(),u=await crypto.subtle.importKey("spki",V(s),{name:"RSA-OAEP",hash:"SHA-256"},!0,["encrypt"]),o=await crypto.subtle.generateKey({name:"AES-CBC",length:256},!0,["encrypt"]),p=crypto.getRandomValues(new Uint8Array(16)),g=await crypto.subtle.exportKey("raw",o),d=await crypto.subtle.encrypt({name:"RSA-OAEP"},u,g),h=new TextEncoder().encode(t),_=await crypto.subtle.encrypt({name:"AES-CBC",iv:p},o,h),a=new Uint8Array(d.byteLength+p.byteLength+_.byteLength);return a.set(new Uint8Array(d),0),a.set(p,d.byteLength),a.set(new Uint8Array(_),d.byteLength+p.byteLength),btoa(String.fromCharCode(...a))}function V(t){const e=t.replace("-----BEGIN PUBLIC KEY-----","").replace("-----END PUBLIC KEY-----","").replace(/\s/g,""),s=atob(e),u=new Uint8Array(s.length);for(let o=0;o<s.length;o++)u[o]=s.charCodeAt(o);return u.buffer}async function K(t,e){const s=localStorage.getItem("github_token");if(!s)throw new Error("No GitHub token found");return(await f.post(`${S}/repos/${R}/${U}/issues`,{title:t,body:e},{headers:{Authorization:`token ${s}`,Accept:"application/vnd.github.v3+json"}})).data}async function I(){return(await f.get(`${S}/repos/${R}/${U}/issues`,{params:{state:"all"},headers:{Accept:"application/vnd.github.v3+json"}})).data}const M=async()=>{E.value=!0;try{const t=await B(D().login+`
`+i.value.code);await K(c.value.title+"评测",t);const e=await I();console.log(e),w.success("提交成功"),setTimeout(()=>{x.push("/status")},3e3)}catch{w.error("提交失败")}};return(t,e)=>{const s=l("el-option"),u=l("el-select"),o=l("el-form-item"),p=l("el-input"),g=l("el-button"),d=l("el-form"),C=l("el-card"),h=l("el-col"),_=l("el-row");return L(),k("div",G,[n(_,{justify:"center"},{default:r(()=>[n(h,{span:20},{default:r(()=>[n(C,null,{header:r(()=>{var a;return[m("div",Y,[m("h2",null,b((a=c.value)==null?void 0:a.title),1)])]}),default:r(()=>[c.value?(L(),k("div",q,[m("h5",null,"供题人："+b(c.value.author),1),m("h5",null,"内存限制："+b(c.value.memoryLimit)+" MB，时间限制："+b(c.value.timeLimit)+" ms",1),m("div",{class:"markdown-body",innerHTML:A.value},null,8,z)])):T("",!0),n(d,{model:i.value,class:"submit-form"},{default:r(()=>[n(o,{label:"编程语言"},{default:r(()=>[n(u,{modelValue:i.value.language,"onUpdate:modelValue":e[0]||(e[0]=a=>i.value.language=a),placeholder:"选择编程语言"},{default:r(()=>[n(s,{label:"C++",value:"cpp"})]),_:1},8,["modelValue"])]),_:1}),n(o,{label:"代码"},{default:r(()=>[n(p,{modelValue:i.value.code,"onUpdate:modelValue":e[1]||(e[1]=a=>i.value.code=a),type:"textarea",rows:15,placeholder:"在此输入你的代码"},null,8,["modelValue"])]),_:1}),n(o,null,{default:r(()=>[n(g,{type:"primary",disabled:E.value,onClick:M},{default:r(()=>e[2]||(e[2]=[O(" 提交代码 ")])),_:1},8,["disabled"])]),_:1})]),_:1},8,["model"])]),_:1})]),_:1})]),_:1})])}}},Z=N(F,[["__scopeId","data-v-9712d071"]]);export{Z as default};
